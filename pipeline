pipeline {
    agent any
    tools {
       // dotnetsdk 'dotnet'
        dockerTool 'docker'
    }
     environment{
        
        registry = "192.168.56.2:5000/harun:latest"
        registryCredential = 'admin'        
    }   
    stages {
        stage('Code Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: '*/master']], 
                    //userRemoteConfigs: [[credentialsId: 'Github', url: 'https://gitlab.com/erdemolcay/dotnet-core-hello-world-web-app']]
                    userRemoteConfigs: [[url: 'https://gitlab.com/erdemolcay/dotnet-core-hello-world-web-app']]
                ])
            }
        }
        stage('Building image') {
            steps{
                script {
                    dockerImage = docker.build registry
                  }
            }
        }
        stage('Deploy Image') {
            steps{
                script {
                    docker.withRegistry( '', registryCredential ) {
                    dockerImage.push()
                      }
                  }
           }
       }
        /*stage('Dotnet Publish') {
            steps {
                dotnetPublish configuration: 'Release', project: 'HelloWorld.sln', sdk: 'dotnet', selfContained: false
            }
        }*/
    }
}


pipeline {
    agent any
    tools {
        dotnetsdk 'dotnet'
        dockerTool 'docker'
    }
     environment{
        
        registry = "192.168.1.7:5000/dotnet:latest"
        registryCredential = 'admin'        
    }   
    stages {
        stage('Code Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: '*/master']], 
                    //userRemoteConfigs: [[credentialsId: 'Github', url: 'https://gitlab.com/erdemolcay/dotnet-core-hello-world-web-app']]
                    userRemoteConfigs: [[url: 'https://gitlab.com/erdemolcay/dotnet-core-hello-world-web-app']]
                ])
            }
        }
        stage('Dotnet Test') {
            steps {
                dotnetTest project: 'HelloWorld.sln', sdk: 'dotnet'
            }
        }
        stage('Dotnet Publish') {
            steps {
                dotnetPublish configuration: 'Release', outputDirectory: 'publish', project: 'HelloWorld.sln', sdk: 'dotnet', selfContained: false
            }
        }
        stage('Building image') {
            steps{
                script {
                    dockerImage = docker.build registry
                  }
            }
        }
        stage('Deploy Image') {
            steps{
                script {
                   // sh 'docker login -u admin -p 123 192.168.1.7:5000' {
                   sh 'docker ps'
                   dockerImage.push()
                     // }
                  }
           }
       }
    }
}
    

